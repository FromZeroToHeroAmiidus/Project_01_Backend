// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email     String   @unique
  hash      String

  firstName String?
  lastName  String?

  avatar    String?

  auctions  Auction[]
  bids      Bid[]

  // Adding relation to PasswordResetToken
  passwordResetTokens PasswordResetToken[]

  @@map("users")
}

model Auction {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  image       String     @default("")
  startingBid Float
  currentBid  Float?
  startTime   DateTime  @default(now())
  endTime     DateTime
  status      String    @default("In progress") // Can be In progress, expired, won, etc.
  ownerId     Int       // Foreign key reference to User
  owner       User      @relation(fields: [ownerId], references: [id])
  bids        Bid[]

  @@map("auctions")
}

model Bid {
  id        Int      @id @default(autoincrement())
  amount    Float
  auctionId Int      // Foreign key reference to Auction
  bidderId  Int      // Foreign key reference to User
  createdAt DateTime @default(now())
  auction   Auction  @relation(fields: [auctionId], references: [id], onDelete: Cascade)
  bidder    User     @relation(fields: [bidderId], references: [id])

  @@map("bids")
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @unique
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])

  @@map("password_reset_tokens")
}
